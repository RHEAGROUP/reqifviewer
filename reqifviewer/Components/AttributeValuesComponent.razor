<!------------------------------------------------------------------------------
    Copyright 2021 RHEA System S.A.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
------------------------------------------------------------------------------->

@using ReqIFSharp;

<RadzenDataGrid PageSize="10" AllowPaging="true" Data="@this.AttributeValues" AllowFiltering="true" TItem="AttributeValue">
    <Columns>
        <RadzenDataGridColumn TItem="AttributeValue" Title="Long Name">
            <Template Context="attributeValue">
                <a href="@QueryAttributeDefinitionUrl(attributeValue.AttributeDefinition)">@attributeValue?.AttributeDefinition.LongName</a>
            </Template>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="AttributeValue" Property="ObjectValue" Title="Value" >
            <Template Context="attributeValue">
                @(new MarkupString(attributeValue?.ObjectValue.ToString())) 
            </Template>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="AttributeValue" Title="Description">
            <Template Context="attributeValue">
                @attributeValue?.AttributeDefinition.Description
            </Template>
        </RadzenDataGridColumn>
    </Columns>
</RadzenDataGrid>

@code {

    /// <summary>
    /// Gets or sets the <see cref="IEnumerable{AttributeValue}"/>
    /// </summary>
    [Parameter]
    public IEnumerable<AttributeValue> AttributeValues { get; set; }
    
    private string QueryAttributeDefinitionUrl(AttributeDefinition attributeDefinition)
    {
        var result = "/";

        try
        {
            result = $"reqif/{attributeDefinition.DatatypeDefinition.ReqIFContent.DocumentRoot.TheHeader.Identifier}/datatypedefinition/{attributeDefinition.Identifier}";
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
        }
        
        return result;
    }
}
