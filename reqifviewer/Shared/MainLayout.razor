<!------------------------------------------------------------------------------
  Copyright 2021 RHEA System S.A.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
------------------------------------------------------------------------------->

@using System.Reflection;

@using Radzen.Blazor

@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

    <RadzenDialog />
    <RadzenNotification />
    <RadzenTooltip />
    <RadzenContextMenu />

    <RadzenHeader>
        <ChildContent>
            <div class="row justify-content-start align-items-center">
                <div class="col-5 d-flex align-items-center">
                    <RadzenSidebarToggle Click="@(args => { sidebarExpanded = !sidebarExpanded; bodyExpanded = !bodyExpanded; })" />
                    <RadzenImage Path="images/reqifsharp-logo-small.png" Style="width:32px" />
                    <RadzenLabel Text="ReqIF Viewer" />
                </div>
                <div class="col-7 d-flex align-items-center justify-content-end">
                    <div class="d-none d-md-inline-flex align-items-center">
                        <a href="/about" title="Inspect the content of ReqIF documents" class="text-nowrap mx-2 mx-lg-3" target="_blank">About</a>
                    </div>
                    <a href="https://github.com/RHEAGROUP/reqifviewer" title="GitHub" target="_blank" class="mx-3">
                        <svg width="24" height="24" viewBox="0 0 512 499.36" xmlns="http://www.w3.org/2000/svg">
                            <title>GitHub</title>
                            <path fill="black" fill-rule="evenodd" d="M256 0C114.64 0 0 114.61 0 256c0 113.09 73.34 209 175.08 242.9 12.8 2.35 17.47-5.56 17.47-12.34 0-6.08-.22-22.18-.35-43.54-71.2 15.49-86.2-34.34-86.2-34.34-11.64-29.57-28.42-37.45-28.42-37.45-23.27-15.84 1.73-15.55 1.73-15.55 25.69 1.81 39.21 26.38 39.21 26.38 22.84 39.12 59.92 27.82 74.5 21.27 2.33-16.54 8.94-27.82 16.25-34.22-56.84-6.43-116.6-28.43-116.6-126.49 0-27.95 10-50.8 26.35-68.69-2.63-6.48-11.42-32.5 2.51-67.75 0 0 21.49-6.88 70.4 26.24a242.65 242.65 0 0 1 128.18 0c48.87-33.13 70.33-26.24 70.33-26.24 14 35.25 5.18 61.27 2.55 67.75 16.41 17.9 26.31 40.75 26.31 68.69 0 98.35-59.85 120-116.88 126.32 9.19 7.9 17.38 23.53 17.38 47.41 0 34.22-.31 61.83-.31 70.23 0 6.85 4.61 14.81 17.6 12.31C438.72 464.97 512 369.08 512 256.02 512 114.62 397.37 0 256 0z"></path>
                        </svg>
                    </a>
                </div>
            </div>
        </ChildContent>
    </RadzenHeader>

    <div style="width:100%">
        <RadzenBody @bind-Expanded="@bodyExpanded">
            <ChildContent>
                <RadzenContentContainer Name="main">
                    @Body
                </RadzenContentContainer>
            </ChildContent>
        </RadzenBody>
    </div>

    <SideMenu @bind-Expanded="@sidebarExpanded"></SideMenu>

    <div class="text-center">
        <RadzenFooter>
            <ChildContent>
                <RadzenLabel Text=@($"Copyright © RHEA System S.A. 2021 - version {version}") />
            </ChildContent>
        </RadzenFooter>
    </div>


    @code {

        bool sidebarExpanded = false;
        bool bodyExpanded = true;
        string version = string.Empty;

        /// <summary>
        /// Method invoked when the component is ready to start, having received its
        /// initial parameters from its parent in the render tree.
        /// Override this method if you will perform an asynchronous operation and
        /// want the component to refresh when that operation is completed.
        /// </summary>
        protected override void OnInitialized()
        {
            this.version = Assembly.GetExecutingAssembly().
                GetCustomAttribute<AssemblyInformationalVersionAttribute>().
                InformationalVersion;
            }
    }
